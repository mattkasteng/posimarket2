const fetch = require('node-fetch').default

async function testVendorLoginFlow() {
  console.log('üîç TESTANDO FLUXO COMPLETO DO LOGIN VENDEDOR')
  console.log('')
  
  try {
    // 1. Simular login com vendedor@teste.com
    console.log('1Ô∏è‚É£ Fazendo login com vendedor@teste.com...')
    const response = await fetch('http://localhost:3000/api/auth/simple-login', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        email: 'vendedor@teste.com',
        password: '123456'
      }),
    })

    if (!response.ok) {
      console.log('‚ùå Erro na API:', response.status)
      return
    }

    const result = await response.json()
    console.log('‚úÖ Login bem-sucedido!')
    console.log('üë§ Usu√°rio:', result.user.nome)
    console.log('üìß Email:', result.user.email)
    console.log('üè∑Ô∏è Tipo:', result.user.tipoUsuario)

    // 2. Simular exatamente o que o LoginForm faz
    console.log('')
    console.log('2Ô∏è‚É£ Simulando c√≥digo do LoginForm...')
    
    // Simular localStorage
    console.log('localStorage.setItem("user", JSON.stringify(result.user))')
    console.log('localStorage.setItem("isLoggedIn", "true")')
    
    // Simular os logs do LoginForm
    console.log('‚úÖ Login vendedor bem-sucedido!')
    console.log('üë§ Usu√°rio vendedor salvo no localStorage:', result.user)
    console.log('üè∑Ô∏è Tipo de usu√°rio sendo salvo:', result.user.tipoUsuario)
    console.log('üîç Tipo como string:', `"${result.user.tipoUsuario}"`)
    console.log('üìè Length:', result.user.tipoUsuario.length)
    console.log('üî§ Char codes:', Array.from(result.user.tipoUsuario).map(c => c.charCodeAt(0)))
    console.log('üîÑ Redirecionando para /dashboard...')
    
    // Simular a l√≥gica de redirecionamento DIRETO
    console.log('')
    console.log('3Ô∏è‚É£ Simulando redirecionamento DIRETO...')
    console.log('üöÄ REDIRECIONAMENTO DIRETO...')
    console.log('Tipo do usu√°rio:', result.user.tipoUsuario)
    console.log('üîç Tipo como string:', `"${result.user.tipoUsuario}"`)
    console.log('Tipo length:', result.user.tipoUsuario.length)
    console.log('Tipo char codes:', Array.from(result.user.tipoUsuario).map(c => c.charCodeAt(0)))
    
    // For√ßar redirecionamento baseado no tipo
    const userType = result.user.tipoUsuario
    console.log('üîç Verificando tipo:', userType)
    
    if (userType === 'ESCOLA') {
      console.log('üìç REDIRECIONANDO PARA ADMIN (ESCOLA)')
      console.log('URL: /dashboard/admin')
      console.log('‚ùå PROBLEMA: Deveria redirecionar para VENDEDOR!')
    } else if (userType === 'PAI_RESPONSAVEL') {
      console.log('üìç REDIRECIONANDO PARA VENDEDOR (PAI_RESPONSAVEL)')
      console.log('URL: /dashboard/vendedor')
      console.log('‚úÖ CORRETO: Redirecionamento correto!')
    } else {
      console.log('‚ùå TIPO DESCONHECIDO:', userType)
      console.log('Redirecionando para dashboard geral')
    }

    // 3. Verificar se h√° diferen√ßa entre banco e API
    console.log('')
    console.log('4Ô∏è‚É£ Verifica√ß√£o adicional...')
    console.log('Tipo recebido da API:', result.user.tipoUsuario)
    console.log('Tipo como string:', `"${result.user.tipoUsuario}"`)
    console.log('Tipo typeof:', typeof result.user.tipoUsuario)
    console.log('Tipo length:', result.user.tipoUsuario.length)
    
    // Verificar se h√° caracteres invis√≠veis
    const charCodes = Array.from(result.user.tipoUsuario).map(c => c.charCodeAt(0))
    console.log('Char codes:', charCodes)
    
    // Verificar se √© exatamente igual
    const isEscola = result.user.tipoUsuario === 'ESCOLA'
    const isPaiResponsavel = result.user.tipoUsuario === 'PAI_RESPONSAVEL'
    
    console.log('Compara√ß√µes:')
    console.log('  - === "ESCOLA":', isEscola)
    console.log('  - === "PAI_RESPONSAVEL":', isPaiResponsavel)
    
    console.log('')
    console.log('üéØ CONCLUS√ÉO:')
    if (isPaiResponsavel) {
      console.log('‚úÖ O tipo est√° correto na API')
      console.log('‚ùå O problema deve estar no navegador')
      console.log('üí° Poss√≠veis causas:')
      console.log('   1. Cache do navegador')
      console.log('   2. C√≥digo JavaScript n√£o atualizado')
      console.log('   3. localStorage com dados antigos')
    } else if (isEscola) {
      console.log('‚ùå O tipo est√° incorreto na API')
      console.log('üîç Investigar banco de dados')
    } else {
      console.log('‚ùì Tipo inesperado:', result.user.tipoUsuario)
    }

  } catch (error) {
    console.error('‚ùå Erro:', error)
  }
}

testVendorLoginFlow()
